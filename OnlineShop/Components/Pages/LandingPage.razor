@page "/"
@inject NavigationManager NavManager
@inject ISqlDataAccess sql
@using ShopBackendLibrary.SqlDataAccess
@using Microsoft.AspNetCore.Components.QuickGrid
@using ShopBackendLibrary
@using ShopBackendLibrary.Models
@rendermode InteractiveServer
<h3>3dForge Designs</h3>


@if (items is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>My Shops</h3>
    <a href="https://www.cgtrader.com/designers/stangil44">
        <img src="/images/cgtrader.jpg" class="shadow" alt="CGTrader Icon" width="100" height="100">
    </a>
    <a href="https://cults3d.com/en/users/Karnajje/3d-models">
        <img src="/images/cults3d.jpg" class="shadow" alt="Cults3d Icon" width="100" height="100">
    </a>
    <a href="https://www.etsy.com/shop/3DForgeAtlanta?ref=seller-platform-mcnav">
        <img src="/images/etsy.png" class="shadow" alt="Etsy Icon" width="100" height="100">
    </a>
    
    <a href="https://www.turbosquid.com/Search/Artists/Stangil">
        <img src="/images/turbosquid.jpg" class="shadow" alt="Turbosquid Icon" width="200" height="100">
    </a>
    <a href="https://www.myminifactory.com/users/Stangil44">
        <img src="/images/myminifactory.png" class="shadow" alt="My Mini Factory Icon" width="200" height="100">
    </a>
@*     <QuickGrid Items="items.AsQueryable()" Pagination="pagination">


        <TemplateColumn Title="View">
            <button class="btn btn-primary" onclick="@(() => ViewItem(context.ItemID))">View</button>
        </TemplateColumn>
        <TemplateColumn Title="Edit">
            <AuthorizeView Roles="Admin">
                <Authorized Context="Auth">
                    <button class="btn btn-primary" onclick="@(() => EditItem(context.ItemID))">Edit</button>
                </Authorized>
            </AuthorizeView>
        </TemplateColumn>
        

        <PropertyColumn Title="Item Name" Property="i => i.ItemName" Sortable="true"/>
        <PropertyColumn Title="Item Description" Property="i => i.ItemDescription" Sortable="true" />
        <PropertyColumn Title="Item Price" Property="i => i.ItemPrice" Sortable="true" />
        <PropertyColumn Title="Category ID" Property="i => i.CategoryID" Sortable="true" />
        <PropertyColumn Title="# In Stock" Property="i => i.InStock" Sortable="true" />

    </QuickGrid>
    <Paginator State="@pagination" /> *@
}
@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 12 };
    private List<Item> items = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }
    private async Task LoadItems()
    {
        items = await sql.LoadData<Item>("dbo.GetAllItems", "Default", null);
    }
    private async Task ViewItem(Guid ItemId)
    {
        NavManager.NavigateTo($"/viewitem/{ItemId}");
    }
    private async Task EditItem(Guid ItemId)
    {
        NavManager.NavigateTo($"/edititem/{ItemId}");
    }
}
